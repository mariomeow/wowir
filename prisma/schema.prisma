generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Session {
  id                     String   @id @default(cuid())
  User                   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId                 String
  jwt_refresh_token_hash String   @unique
  expiresAt              DateTime
}

model User {
  id                    String              @id
  username              String
  avatar                String?
  discord_refresh_token String
  isAdmin               Boolean             @default(false)
  sessions              Session[]
  raids                 Raid[]
  raidParticipations    RaidParticipation[]
  AllTime               AllTime[]
}

model Raid {
  id                 String              @id @default(uuid(7))
  name               String
  instanceId         Int
  startsAt           DateTime            @default(now())
  locked             Boolean?            @default(false)
  host               User                @relation(fields: [hostId], references: [id], onDelete: Cascade)
  hostId             String
  raidParticipations RaidParticipation[]
}

model RaidParticipation {
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String
  raid     Raid     @relation(fields: [raidId], references: [id], onDelete: Cascade)
  raidId   String
  joinedAt DateTime @default(now())

  @@id([userId, raidId])
}

model AllTime {
  instanceId Int
  times_ran  Int?   @default(0)
  user       User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String

  @@id([userId, instanceId])
}
